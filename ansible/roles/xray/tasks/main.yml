---
- name: Create Xray configuration directory
  file:
    path: /opt/fastapi_xray/xray
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags: [xray, directories]

- name: Create Xray logs directory
  file:
    path: "{{ xray_logs_path }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags: [xray, directories]

- name: Check if Reality keys already exist
  stat:
    path: /opt/fastapi_xray/xray/reality_keys.json
  register: xray_keys_stat
  tags: [xray, keys]

- name: Generate Xray Reality keypair (using docker image)
  command: docker run --rm teddysun/xray xray x25519
  register: xray_keygen
  changed_when: true
  when: not xray_keys_stat.stat.exists
  tags: [xray, keys]

- name: Parse keypair output
  set_fact:
    xray_private_key: "{{ (xray_keygen.stdout | regex_search('Private key: ([^\n]+)', '\\1')) | trim }}"
    xray_public_key: "{{ (xray_keygen.stdout | regex_search('Public key: ([^\n]+)', '\\1')) | trim }}"
  when: not xray_keys_stat.stat.exists
  tags: [xray, keys]

- name: Persist Reality keys to file
  copy:
    dest: /opt/fastapi_xray/xray/reality_keys.json
    content: |
      {"private":"{{ xray_private_key }}","public":"{{ xray_public_key }}"}
    owner: root
    group: root
    mode: '0600'
  when: not xray_keys_stat.stat.exists
  tags: [xray, keys]

- name: Load existing Reality keys
  slurp:
    src: /opt/fastapi_xray/xray/reality_keys.json
  register: xray_keys_slurp
  when: xray_keys_stat.stat.exists
  tags: [xray, keys]

- name: Set facts from existing Reality keys
  set_fact:
    xray_private_key: "{{ (xray_keys_slurp.content | b64decode | from_json).private }}"
    xray_public_key: "{{ (xray_keys_slurp.content | b64decode | from_json).public }}"
  when: xray_keys_stat.stat.exists
  tags: [xray, keys]

- name: Generate Xray configuration
  template:
    src: config.json.j2
    dest: "{{ xray_config_path }}"
    owner: root
    group: root
    mode: '0644'
  notify: restart xray
  tags: [xray, config]

- name: Create Xray systemd service
  template:
    src: xray.service.j2
    dest: /etc/systemd/system/xray.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart xray
  tags: [xray, service]

- name: Create Docker Compose configuration for Xray
  template:
    src: docker-compose-xray.yml.j2
    dest: /opt/fastapi_xray/docker-compose-xray.yml
    owner: root
    group: root
    mode: '0644'
  tags: [xray, docker]

- name: Start Xray service
  systemd:
    name: xray
    state: started
    enabled: yes
    daemon_reload: yes
  tags: [xray, service]

- name: Check Xray service status
  systemd:
    name: xray
  register: xray_status
  tags: [xray, status]
